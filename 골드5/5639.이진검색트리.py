'''
문제
이진 검색 트리는 다음과 같은 세 가지 조건을 만족하는 이진 트리이다.

노드의 왼쪽 서브트리에 있는 모든 노드의 키는 노드의 키보다 작다.
노드의 오른쪽 서브트리에 있는 모든 노드의 키는 노드의 키보다 크다.
왼쪽, 오른쪽 서브트리도 이진 검색 트리이다.


전위 순회 (루트-왼쪽-오른쪽)은 루트를 방문하고, 왼쪽 서브트리, 오른쪽 서브 트리를 순서대로 방문하면서 노드의 키를 출력한다. 후위 순회 (왼쪽-오른쪽-루트)는 왼쪽 서브트리, 오른쪽 서브트리, 루트 노드 순서대로 키를 출력한다. 예를 들어, 위의 이진 검색 트리의 전위 순회 결과는 50 30 24 5 28 45 98 52 60 이고, 후위 순회 결과는 5 28 24 45 30 60 52 98 50 이다.

이진 검색 트리를 전위 순회한 결과가 주어졌을 때, 이 트리를 후위 순회한 결과를 구하는 프로그램을 작성하시오.

입력
트리를 전위 순회한 결과가 주어진다. 노드에 들어있는 키의 값은 106보다 작은 양의 정수이다. 모든 값은 한 줄에 하나씩 주어지며, 노드의 수는 10,000개 이하이다. 같은 키를 가지는 노드는 없다.

출력
입력으로 주어진 이진 검색 트리를 후위 순회한 결과를 한 줄에 하나씩 출력한다.
'''
import sys
input = sys.stdin.readline
sys.setrecursionlimit(10**6)

def post(arr):                          # 후위순회 정렬 함수
    root = arr[0]                       # 배열의 0번 인덱스 값이 root이다
    if len(arr) == 1:                   # 더이상 정렬할 것이 없는 마지막 노드이면 리턴
        return arr                      
    left_tree, right_tree = [], []      # 루트 기준 왼쪽 트리, 오른쪽 트리를 담을 배열
    for i in range(1, len(arr)):
        if arr[i] < root:               # 이진 탐색트리이기 떄문에 루트보다 값이 작으면
            left_tree.append(arr[i])    # 왼쪽 트리
        else:                           # 루트보다 값이 크면
            right_tree.append(arr[i])   # 오른쪽 트리
    if left_tree:                       # 왼쪽트리(있다면)를
        A = post(left_tree)             # 재귀 돌린다
    else:                               # 왼쪽트리 없다면
        A = []                          # 그냥 빈배열
    if right_tree:                      # 오른쪽트리(있다면)을
        B = post(right_tree)            # 재귀 돌린다
    else:                               # 오른쪽트리 없다면
        B = []                          # 그냥 빈배열
    temp = A + B + [root]               # 후위순회 정렬된 배열을 루트 기준 왼쪽트리 + 오른쪽트리 + 루트로 완성시킨다
    return temp                         # 정렬된 배열을 리턴
pre = []
while True:
    a = input()
    if a:
        pre.append(int(a))              # 전위순회 정보 담는다
        continue
    break
for i in post(pre):                     # 후위순회 정렬된 배열을
    print(i)                            # 하나씩 출력
    
    